app:
  region: ap-southeast-1
  puma:
    healthcheck: true
    enabled: true
    hpa:
      minReplicas: 2
      maxReplicas: 3
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 2048
    mem_required: 1024
    cpu_limit: 1000
    cpu_required: 500
  sidekiq:
    lifecycle:
      preStop:
       command:
         - /bin/sh
         - '-c'
         - |
           kill -TERM $(ps -aux| grep -i 'sidekiq' | awk 'NR==1{print $2}')  
    healthcheck: false
    enabled: true
    hpa:
      minReplicas: 1
      maxReplicas: 1
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 400
    mem_required: 200
    cpu_limit: 200
    cpu_required: 100
  qlogger:
    healthcheck: false
    enabled: false
    hpa:
      minReplicas: 1
      maxReplicas: 1
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 400
    mem_required: 200
    cpu_limit: 200
    cpu_required: 100
  racecar:
    enabled: true
    hpa:
      minReplicas: 1
      maxReplicas: 1
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 0
    mem_required: 400
    cpu_limit: 0
    cpu_required: 100      
  namespace: uat
  name: qship
  port: 3000
  env: uat
  image_pull_policy: IfNotPresent
  mem_limit: 0
  mem_required: 1024
  cpu_limit: 0
  cpu_required: 500
  node_selectors:
    environment: uat
    node-type: on_demand
  preDeployScript:
    enabled: true
    scriptPath: pre-deploy/pre-deploy.sh #script to be ran inside the container
cron:
  enabled: false
  command: "cd /var/app/current; bin/init-config.sh; bundle exec rake open_api_counters:reset --silent"
  schedule: "0 * * * *"
image:
  name: 244836737383.dkr.ecr.ap-southeast-1.amazonaws.com/qship-quincus-images
  tag: "aa3ab76"
service:
  type: ClusterIP
secretManager:
  secretId: uat/qship
  versionId: 891cec04-2501-47b0-892b-b5b34757990c
ingress:
  enabled: true
  hostName: api.qship.uat.quincus.com
  path: /
  nginx_annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://dispatch.uat.quincus.com, https://shipment.uat.quincus.com, https://pricing.uat.quincus.com, https://common.uat.quincus.com, https://order.uat.quincus.com, https://uat.quincus.com, https://quincus.uat.qship.quincus.com, https://oms.postsales.ams1907.com, https://oms.expresscritical.ams1907.com, https://track.postsales.ams1907.com, https://track.expresscritical.ams1907.com, https://upstmsapc.uat.qship.quincus.com, https://upsexpc.uat.qship.quincus.com, https://shpstg08.uat.qship.quincus.com, https://3011sg.uat.qship.quincus.com, https://segorg.uat.qship.quincus.com, https://140223.uat.qship.quincus.com, https://e2eauto.uat.qship.quincus.com, https://07022023.uat.qship.quincus.com, https://UPSSTG.uat.qship.quincus.com, https://VYPM.uat.qship.quincus.com, https://seg1512.uat.qship.quincus.com, https://nseg1512.uat.qship.quincus.com, https://uatrtut.uat.qship.quincus.com, https://uat.quincus.app"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,locale,token,platform"    
redis:
  architecture: standalone
  enabled: false
  master:
    persistence:
      size: 8Gi
    node_selectors:
      environment: uat
      node-type: on_demand
  auth:
    enabled: false
