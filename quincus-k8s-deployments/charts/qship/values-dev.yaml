app:
  region: ap-southeast-1
  puma:
    healthcheck: true
    enabled: true
    hpa:
      minReplicas: 1
      maxReplicas: 2
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 2048
    mem_required: 1024
    cpu_limit: 1000
    cpu_required: 500
  sidekiq:
    lifecycle:
      preStop:
       command:
         - /bin/sh
         - '-c'
         - |
           kill -TERM $(ps -aux| grep -i 'sidekiq' | awk 'NR==1{print $2}')  
    healthcheck: false
    enabled: true
    hpa:
      minReplicas: 1
      maxReplicas: 1
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 400
    mem_required: 200
    cpu_limit: 200
    cpu_required: 100
  qlogger:
    healthcheck: false
    enabled: false
    hpa:
      minReplicas: 1
      maxReplicas: 1
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 400
    mem_required: 200
    cpu_limit: 400
    cpu_required: 100
  racecar:
    enabled: true
    hpa:
      minReplicas: 1
      maxReplicas: 1
      averageCPUUtilization: 75
      averageMemoryUtilization: 75
    mem_limit: 0
    mem_required: 400
    cpu_limit: 0
    cpu_required: 100    
  namespace: dev
  name: qship
  port: 3000
  env: dev
  image_pull_policy: IfNotPresent
  node_selectors:
    environment: dev
    node-type: spot
  preDeployScript:
    enabled: true
    scriptPath: pre-deploy/pre-deploy.sh #script to be ran inside the container
cron:
  enabled: false
  command: "cd /var/app/current; bin/init-config.sh; bundle exec rake open_api_counters:reset --silent"
  schedule: "0 * * * *"
image:
  name: 244836737383.dkr.ecr.ap-southeast-1.amazonaws.com/qship-quincus-images
  tag: "cd5999b"
service:
  type: ClusterIP
secretManager:
  secretId: dev/qship
  versionId: 818f6c1c-09db-418e-be78-ecdd15dbfa67
ingress:
  enabled: true
  hostName_noram: api.qship.dev-noram.quincus.com
  hostName: api.qship.dev.quincus.com
  path: /
  nginx_annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://dispatch.dev.quincus.com, https://shipment.dev.quincus.com, https://pricing.dev.quincus.com, https://common.dev.quincus.com, https://order.dev.quincus.com, https://dev.quincus.com, https://quincus.dev.qship.quincus.com, http://quincus.qship.local.com:3004, https://dev.quincus.app"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,locale,token,platform"  
redis:
  architecture: standalone
  enabled: false
  master:
    persistence:
      size: 8Gi
    node_selectors:
      environment: dev
      node-type: spot
  auth:
    enabled: false
